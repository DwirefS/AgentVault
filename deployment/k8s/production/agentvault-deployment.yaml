apiVersion: v1
kind: Namespace
metadata:
  name: agentvault
  labels:
    name: agentvault
    environment: production

---
# Service Account with Azure Workload Identity
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agentvault
  namespace: agentvault
  annotations:
    azure.workload.identity/client-id: "${AZURE_CLIENT_ID}"
    azure.workload.identity/tenant-id: "${AZURE_TENANT_ID}"
  labels:
    azure.workload.identity/use: "true"

---
# ConfigMap for non-sensitive configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: agentvault-config
  namespace: agentvault
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  API_HOST: "0.0.0.0"
  API_PORT: "8080"
  API_WORKERS: "4"
  REDIS_CLUSTER_MODE: "true"
  ML_GPU_ENABLED: "true"
  ML_UPDATE_INTERVAL: "1h"
  ANOMALY_THRESHOLD: "3.0"
  KEY_ROTATION_DAYS: "90"
  ENABLE_HSM: "true"
  QUANTUM_RESISTANT: "true"
  CORS_ORIGINS: "*"
  ALLOWED_HOSTS: "agentvault.yourdomain.com"

---
# Secret for sensitive data (should be created via sealed-secrets or external secret operator)
apiVersion: v1
kind: Secret
metadata:
  name: agentvault-secrets
  namespace: agentvault
type: Opaque
stringData:
  AZURE_TENANT_ID: "${AZURE_TENANT_ID}"
  AZURE_CLIENT_ID: "${AZURE_CLIENT_ID}"
  AZURE_CLIENT_SECRET: "${AZURE_CLIENT_SECRET}"
  AZURE_SUBSCRIPTION_ID: "${AZURE_SUBSCRIPTION_ID}"
  AZURE_RESOURCE_GROUP: "${AZURE_RESOURCE_GROUP}"
  AZURE_KEY_VAULT_URL: "${AZURE_KEY_VAULT_URL}"
  AZURE_ANF_ACCOUNT: "${AZURE_ANF_ACCOUNT}"
  AZURE_ANF_SUBNET_ID: "${AZURE_ANF_SUBNET_ID}"
  AZURE_MONITOR_WORKSPACE_ID: "${AZURE_MONITOR_WORKSPACE_ID}"
  DATA_COLLECTION_ENDPOINT: "${DATA_COLLECTION_ENDPOINT}"
  DATA_COLLECTION_RULE_ID: "${DATA_COLLECTION_RULE_ID}"
  REDIS_URL: "redis://redis-cluster:6379"
  SENTRY_DSN: "${SENTRY_DSN}"

---
# Main Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentvault
  namespace: agentvault
  labels:
    app: agentvault
    component: core
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: agentvault
      component: core
  template:
    metadata:
      labels:
        app: agentvault
        component: core
        version: v1.0.0
        azure.workload.identity/use: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: agentvault
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Pod disruption budget
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - agentvault
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: agentpool
                operator: In
                values:
                - production
      
      # Init containers
      initContainers:
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c']
        args:
          - |
            until nc -z redis-cluster 6379; do
              echo "Waiting for Redis..."
              sleep 2
            done
      
      # Main container
      containers:
      - name: agentvault
        image: agentvault.azurecr.io/agentvault/core:v1.0.0
        imagePullPolicy: Always
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        
        # Environment variables
        envFrom:
        - configMapRef:
            name: agentvault-config
        - secretRef:
            name: agentvault-secrets
        
        env:
        # Pod information
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # Azure Workload Identity
        - name: AZURE_FEDERATED_TOKEN_FILE
          value: /var/run/secrets/tokens/azure-identity-token
        - name: AZURE_AUTHORITY_HOST
          value: https://login.microsoftonline.com/
        
        # Resources
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
            ephemeral-storage: 5Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 10Gi
        
        # Volume mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache/agentvault
        - name: logs
          mountPath: /var/log/agentvault
        - name: models
          mountPath: /models
        - name: azure-identity-token
          mountPath: /var/run/secrets/tokens
          readOnly: true
        
        # Probes
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      - name: cache
        emptyDir:
          sizeLimit: 5Gi
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: models
        persistentVolumeClaim:
          claimName: agentvault-models
      - name: azure-identity-token
        projected:
          sources:
          - serviceAccountToken:
              audience: api://AzureADTokenExchange
              expirationSeconds: 3600
              path: azure-identity-token

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: agentvault
  namespace: agentvault
  labels:
    app: agentvault
    component: core
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: metrics
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: grpc
    protocol: TCP
  selector:
    app: agentvault
    component: core

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agentvault
  namespace: agentvault
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agentvault
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: agentvault_request_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agentvault
  namespace: agentvault
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: agentvault
      component: core

---
# NetworkPolicy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: agentvault
  namespace: agentvault
spec:
  podSelector:
    matchLabels:
      app: agentvault
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443  # HTTPS for Azure services
    - protocol: TCP
      port: 6379 # Redis
    - protocol: TCP
      port: 5432 # PostgreSQL
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 53  # DNS
    - protocol: UDP
      port: 53

---
# PersistentVolumeClaim for ML models
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: agentvault-models
  namespace: agentvault
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: managed-csi-premium