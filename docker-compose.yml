version: '3.8'

# AgentVaultâ„¢ Docker Compose Configuration
# Author: Dwiref Sharma
# Contact: DwirefS@SapientEdge.io

services:
  # Main API Service
  agentvault-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: agentvault:latest
    container_name: agentvault-api
    ports:
      - "8000:8000"
    environment:
      - AGENTVAULT_SERVICE=api
      - AGENTVAULT_ENV=production
    env_file:
      - .env
    volumes:
      - ./configs:/app/configs:ro
      - agentvault-data:/app/data
      - /mnt/agentvault:/mnt/agentvault
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - agentvault-network

  # Storage Orchestrator Service
  agentvault-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    image: agentvault:latest
    container_name: agentvault-orchestrator
    environment:
      - AGENTVAULT_SERVICE=orchestrator
      - AGENTVAULT_ENV=production
    env_file:
      - .env
    volumes:
      - ./configs:/app/configs:ro
      - agentvault-data:/app/data
      - /mnt/agentvault:/mnt/agentvault
    depends_on:
      - redis
    networks:
      - agentvault-network

  # ML Worker Service
  agentvault-ml-worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: agentvault:latest
    container_name: agentvault-ml-worker
    environment:
      - AGENTVAULT_SERVICE=ml-worker
      - AGENTVAULT_ENV=production
    env_file:
      - .env
    volumes:
      - ./configs:/app/configs:ro
      - agentvault-data:/app/data
      - ml-models:/app/models
    depends_on:
      - redis
    networks:
      - agentvault-network

  # Monitoring Service
  agentvault-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    image: agentvault:latest
    container_name: agentvault-monitor
    ports:
      - "9090:9090"
    environment:
      - AGENTVAULT_SERVICE=monitor
      - AGENTVAULT_ENV=production
    env_file:
      - .env
    volumes:
      - ./configs:/app/configs:ro
    networks:
      - agentvault-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: agentvault-redis
    ports:
      - "6379:6379"
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 4gb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--auth", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agentvault-network

  # Prometheus (optional - for local monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: agentvault-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - agentvault-monitor
    networks:
      - agentvault-network

  # Grafana (optional - for visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: agentvault-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - agentvault-network

  # Development Database (optional - for local development)
  postgres:
    image: postgres:15-alpine
    container_name: agentvault-postgres
    environment:
      - POSTGRES_DB=agentvault
      - POSTGRES_USER=agentvault
      - POSTGRES_PASSWORD=${DB_PASSWORD:-agentvault}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    profiles:
      - development
    networks:
      - agentvault-network

networks:
  agentvault-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  agentvault-data:
    driver: local
  redis-data:
    driver: local
  ml-models:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  postgres-data:
    driver: local